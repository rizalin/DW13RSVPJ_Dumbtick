{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haibu\\\\Documents\\\\nodejs\\\\tugas-akhir\\\\src\\\\mapping\\\\upcomingEvent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport EventList from \"../list/eventlist\";\nimport { nextEvent } from \"../_actions/event\";\nimport moment from \"moment\";\nconst dateNow = new Date();\n\nclass UpcomingEvent extends Component {\n  componentDidMount() {\n    this.props.dispatch(nextEvent());\n  }\n\n  render() {\n    const _this$props$event = this.props.event,\n          data = _this$props$event.data,\n          isLoading = _this$props$event.isLoading;\n    const today = new Date(dateNow);\n    const DateNow = moment(today).format(\"DD MMM YYYY\");\n    console.log(DateNow);\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-evenly\",\n      alignItems: \"center\",\n      spacing: 2,\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, data.filter(event => moment(event.startTime).format(\"DD MMM YYYY\").toString() !== DateNow).map(event => React.createElement(EventList, {\n      key: event.id,\n      id: event.id,\n      img: event.img,\n      title: event.title,\n      price: event.price,\n      brief: event.briefDesc,\n      time: event.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    event: state.event\n  };\n};\n\nexport default connect(mapStateToProps)(UpcomingEvent);","map":{"version":3,"sources":["C:/Users/haibu/Documents/nodejs/tugas-akhir/src/mapping/upcomingEvent.js"],"names":["React","Component","connect","Grid","EventList","nextEvent","moment","dateNow","Date","UpcomingEvent","componentDidMount","props","dispatch","render","event","data","isLoading","today","DateNow","format","console","log","marginTop","marginBottom","filter","startTime","toString","map","id","img","title","price","briefDesc","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AAEA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAElCS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBP,SAAS,EAA7B;AACH;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,8BACuB,KAAKF,KAAL,CAAWG,KADlC;AAAA,UACGC,IADH,qBACGA,IADH;AAAA,UACSC,SADT,qBACSA,SADT;AAEL,UAAMC,KAAK,GAAG,IAAIT,IAAJ,CAASD,OAAT,CAAd;AACA,UAAMW,OAAO,GAAGZ,MAAM,CAACW,KAAD,CAAN,CAAcE,MAAd,CAAqB,aAArB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAEA,WACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC,KAFd;AAGI,MAAA,OAAO,EAAC,cAHZ;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,OAAO,EAAE,CALb;AAMI,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKR,IAAI,CACAS,MADJ,CACWV,KAAK,IAAKR,MAAM,CAACQ,KAAK,CAACW,SAAP,CAAN,CAAwBN,MAAxB,CAA+B,aAA/B,EAA8CO,QAA9C,OAA6DR,OADlF,EAEIS,GAFJ,CAEQb,KAAK,IACN,oBAAC,SAAD;AACI,MAAA,GAAG,EAAEA,KAAK,CAACc,EADf;AAEI,MAAA,EAAE,EAAEd,KAAK,CAACc,EAFd;AAGI,MAAA,GAAG,EAAEd,KAAK,CAACe,GAHf;AAII,MAAA,KAAK,EAAEf,KAAK,CAACgB,KAJjB;AAKI,MAAA,KAAK,EAAEhB,KAAK,CAACiB,KALjB;AAMI,MAAA,KAAK,EAAEjB,KAAK,CAACkB,SANjB;AAOI,MAAA,IAAI,EAAElB,KAAK,CAACW,SAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHP,CARL,CADJ;AAwBH;;AApCiC;;AAuCtC,MAAMQ,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHpB,IAAAA,KAAK,EAAEoB,KAAK,CAACpB;AADV,GAAP;AAGH,CAJD;;AAMA,eAAeZ,OAAO,CAAC+B,eAAD,CAAP,CAAyBxB,aAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport EventList from \"../list/eventlist\";\r\nimport { nextEvent } from \"../_actions/event\"\r\nimport moment from \"moment\";\r\n\r\nconst dateNow = new Date();\r\n\r\nclass UpcomingEvent extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(nextEvent())\r\n    }\r\n\r\n    render() {\r\n        const { data, isLoading } = this.props.event;\r\n        const today = new Date(dateNow)\r\n        const DateNow = moment(today).format(\"DD MMM YYYY\")\r\n        console.log(DateNow)\r\n\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-evenly\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n            >\r\n                {data\r\n                    .filter(event => (moment(event.startTime).format(\"DD MMM YYYY\").toString() !== DateNow))\r\n                    .map(event => (\r\n                        <EventList\r\n                            key={event.id}\r\n                            id={event.id}\r\n                            img={event.img}\r\n                            title={event.title}\r\n                            price={event.price}\r\n                            brief={event.briefDesc}\r\n                            time={event.startTime}\r\n                        />\r\n                    ))}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        event: state.event\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(UpcomingEvent);"]},"metadata":{},"sourceType":"module"}