{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haibu\\\\Documents\\\\nodejs\\\\tugas-akhir\\\\src\\\\category\\\\category.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCategory, getEventByCategory } from \"../_actions/category\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { Container } from 'react-bootstrap';\nimport moment from 'moment';\nimport Header from \"../header/header\";\nimport Footer from \"../footer\";\nimport EventList from \"../list/eventlist\";\n\nclass Category extends Component {\n  constructor(props) {\n    super(props);\n    this.query = new URLSearchParams(window.location.search);\n    this.url = this.query.get(\"id\");\n    this.state = {\n      date: ''\n    };\n  }\n\n  componentDidMount() {\n    const id = this.url;\n    this.props.dispatch(getCategory(id));\n    this.props.dispatch(getEventByCategory(id));\n  }\n\n  render() {\n    const data = this.props.category.data;\n    const catData = this.props.categories.data;\n    const date = this.state.date;\n    let dateFilter = moment(date).format(\"DD MMM YYYY\");\n    let filter;\n\n    if (date = '') {\n      {\n        catData.map(event => React.createElement(EventList, {\n          key: event.id,\n          img: event.img,\n          title: event.title,\n          price: event.price,\n          brief: event.briefDesc,\n          time: event.startTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }));\n      }\n    } else {\n      {\n        catData.filter(event => moment(event.startTime).format(\"DD MMM YYYY\").toString() === dateFilter).map(event => React.createElement(EventList, {\n          key: event.id,\n          img: event.img,\n          title: event.title,\n          price: event.price,\n          brief: event.briefDesc,\n          time: event.startTime,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }));\n      }\n    }\n\n    console.log(catData);\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, data.name), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Sort by:\"), React.createElement(TextField, {\n      type: \"date\",\n      defaultValue: '2020-01-01T10:30',\n      InputLabelProps: {\n        shrink: true\n      },\n      value: this.state.date,\n      onChange: e => {\n        this.setState({\n          date: e.target.value\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      spacing: 2,\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, catData.filter(event => moment(event.startTime).format(\"DD MMM YYYY\").toString() === dateFilter).map(event => React.createElement(EventList, {\n      key: event.id,\n      img: event.img,\n      title: event.title,\n      price: event.price,\n      brief: event.briefDesc,\n      time: event.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })))), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    category: state.category,\n    categories: state.eventByCat\n  };\n};\n\nexport default connect(mapStateToProps)(Category);","map":{"version":3,"sources":["C:/Users/haibu/Documents/nodejs/tugas-akhir/src/category/category.js"],"names":["React","Component","connect","getCategory","getEventByCategory","TextField","Grid","Container","moment","Header","Footer","EventList","Category","constructor","props","query","URLSearchParams","window","location","search","url","get","state","date","componentDidMount","id","dispatch","render","data","category","catData","categories","dateFilter","format","filter","map","event","img","title","price","briefDesc","startTime","toString","console","log","name","shrink","e","setState","target","value","marginTop","marginBottom","mapStateToProps","eventByCat"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,sBAAhD;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,mBAAhC;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAI/BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAHnBC,KAGmB,GAHX,IAAIC,eAAJ,CAAoBC,MAAM,CAACC,QAAP,CAAgBC,MAApC,CAGW;AAAA,SAFnBC,GAEmB,GAFb,KAAKL,KAAL,CAAWM,GAAX,CAAe,IAAf,CAEa;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,EAAE,GAAG,KAAKL,GAAhB;AACA,SAAKN,KAAL,CAAWY,QAAX,CAAoBvB,WAAW,CAACsB,EAAD,CAA/B;AACA,SAAKX,KAAL,CAAWY,QAAX,CAAoBtB,kBAAkB,CAACqB,EAAD,CAAtC;AACD;;AAIDE,EAAAA,MAAM,GAAG;AAAA,UACCC,IADD,GACU,KAAKd,KAAL,CAAWe,QADrB,CACCD,IADD;AAEP,UAAME,OAAO,GAAG,KAAKhB,KAAL,CAAWiB,UAAX,CAAsBH,IAAtC;AACA,UAAML,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,QAAIS,UAAU,GAAGxB,MAAM,CAACe,IAAD,CAAN,CAAaU,MAAb,CAAoB,aAApB,CAAjB;AACA,QAAIC,MAAJ;;AACA,QAAIX,IAAI,GAAG,EAAX,EAAe;AACb;AACEO,QAAAA,OAAO,CACJK,GADH,CACOC,KAAK,IACR,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEA,KAAK,CAACX,EADb;AAEE,UAAA,GAAG,EAAEW,KAAK,CAACC,GAFb;AAGE,UAAA,KAAK,EAAED,KAAK,CAACE,KAHf;AAIE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,UAAA,KAAK,EAAEH,KAAK,CAACI,SALf;AAME,UAAA,IAAI,EAAEJ,KAAK,CAACK,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWD;AACF,KAdD,MAcO;AACL;AACEX,QAAAA,OAAO,CACJI,MADH,CACUE,KAAK,IAAK5B,MAAM,CAAC4B,KAAK,CAACK,SAAP,CAAN,CAAwBR,MAAxB,CAA+B,aAA/B,EAA8CS,QAA9C,OAA6DV,UADjF,EAEGG,GAFH,CAEOC,KAAK,IACR,oBAAC,SAAD;AACE,UAAA,GAAG,EAAEA,KAAK,CAACX,EADb;AAEE,UAAA,GAAG,EAAEW,KAAK,CAACC,GAFb;AAGE,UAAA,KAAK,EAAED,KAAK,CAACE,KAHf;AAIE,UAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,UAAA,KAAK,EAAEH,KAAK,CAACI,SALf;AAME,UAAA,IAAI,EAAEJ,KAAK,CAACK,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AAYD;AACF;;AAEDE,IAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ;AACA,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,IAAI,CAACiB,IAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,EAOE,oBAAC,SAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,YAAY,EAAE,kBAFhB;AAGE,MAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE;AADO,OAHnB;AAME,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWC,IANpB;AAOE,MAAA,QAAQ,EAAEwB,CAAC,IAAI;AACb,aAAKC,QAAL,CAAc;AACZzB,UAAAA,IAAI,EAAEwB,CAAC,CAACE,MAAF,CAASC;AADH,SAAd;AAGD,OAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAqBE,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,OAAO,EAAC,eAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,OAAO,EAAE,CALX;AAME,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGtB,OAAO,CACLI,MADF,CACSE,KAAK,IAAK5B,MAAM,CAAC4B,KAAK,CAACK,SAAP,CAAN,CAAwBR,MAAxB,CAA+B,aAA/B,EAA8CS,QAA9C,OAA6DV,UADhF,EAEEG,GAFF,CAEMC,KAAK,IACR,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACX,EADb;AAEE,MAAA,GAAG,EAAEW,KAAK,CAACC,GAFb;AAGE,MAAA,KAAK,EAAED,KAAK,CAACE,KAHf;AAIE,MAAA,KAAK,EAAEF,KAAK,CAACG,KAJf;AAKE,MAAA,KAAK,EAAEH,KAAK,CAACI,SALf;AAME,MAAA,IAAI,EAAEJ,KAAK,CAACK,SANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CARH,CArBF,CAFF,EA8CE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CF,CADF;AAoDD;;AA7G8B;;AAmHjC,MAAMY,eAAe,GAAG/B,KAAK,IAAI;AAC/B,SAAO;AACLO,IAAAA,QAAQ,EAAEP,KAAK,CAACO,QADX;AAELE,IAAAA,UAAU,EAAET,KAAK,CAACgC;AAFb,GAAP;AAID,CALD;;AAOA,eAAepD,OAAO,CAACmD,eAAD,CAAP,CAAyBzC,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { getCategory, getEventByCategory } from \"../_actions/category\"\r\nimport { TextField, Grid } from \"@material-ui/core\"\r\nimport { Container } from 'react-bootstrap'\r\nimport moment from 'moment'\r\n\r\nimport Header from \"../header/header\";\r\nimport Footer from \"../footer\";\r\nimport EventList from \"../list/eventlist\";\r\n\r\nclass Category extends Component {\r\n  query = new URLSearchParams(window.location.search);\r\n  url = this.query.get(\"id\");\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      date: ''\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const id = this.url;\r\n    this.props.dispatch(getCategory(id));\r\n    this.props.dispatch(getEventByCategory(id));\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { data } = this.props.category\r\n    const catData = this.props.categories.data\r\n    const date = this.state.date\r\n    let dateFilter = moment(date).format(\"DD MMM YYYY\")\r\n    let filter;\r\n    if (date = '') {\r\n      {\r\n        catData\r\n          .map(event => (\r\n            <EventList\r\n              key={event.id}\r\n              img={event.img}\r\n              title={event.title}\r\n              price={event.price}\r\n              brief={event.briefDesc}\r\n              time={event.startTime}\r\n            />\r\n          ))\r\n      }\r\n    } else {\r\n      {\r\n        catData\r\n          .filter(event => (moment(event.startTime).format(\"DD MMM YYYY\").toString() === dateFilter))\r\n          .map(event => (\r\n            <EventList\r\n              key={event.id}\r\n              img={event.img}\r\n              title={event.title}\r\n              price={event.price}\r\n              brief={event.briefDesc}\r\n              time={event.startTime}\r\n            />\r\n          ))\r\n      }\r\n    }\r\n\r\n    console.log(catData)\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Container>\r\n          <br></br>\r\n          <br></br>\r\n          <h1>{data.name}</h1>\r\n          <br></br>\r\n          <br></br>\r\n          <h2>Sort by:</h2>\r\n          <TextField\r\n            type=\"date\"\r\n            defaultValue={'2020-01-01T10:30'}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            value={this.state.date}\r\n            onChange={e => {\r\n              this.setState({\r\n                date: e.target.value\r\n              });\r\n            }}\r\n          />\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n            style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n          >\r\n            {catData\r\n              .filter(event => (moment(event.startTime).format(\"DD MMM YYYY\").toString() === dateFilter))\r\n              .map(event => (\r\n                <EventList\r\n                  key={event.id}\r\n                  img={event.img}\r\n                  title={event.title}\r\n                  price={event.price}\r\n                  brief={event.briefDesc}\r\n                  time={event.startTime}\r\n                />\r\n              ))}\r\n          </Grid>\r\n\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    category: state.category,\r\n    categories: state.eventByCat\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Category);\r\n"]},"metadata":{},"sourceType":"module"}