{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haibu\\\\Documents\\\\nodejs\\\\tugas-akhir\\\\src\\\\mapping\\\\eventnow.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport EventList from \"../list/eventlist\";\nimport { getEvents } from \"../_actions/event\";\nimport moment from \"moment\";\nconst dateNow = new Date();\n\nclass EventNow extends Component {\n  componentDidMount() {\n    this.props.dispatch(getEvents());\n  }\n\n  render() {\n    const _this$props$event = this.props.event,\n          data = _this$props$event.data,\n          isLoading = _this$props$event.isLoading;\n    const today = new Date(dateNow);\n    const DateNow = moment(today).format(\"DD MMM YYYY\");\n    console.log(DateNow);\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-evenly\",\n      alignItems: \"center\",\n      spacing: 2,\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, data.filter(event => moment(event.startTime).format(\"DD MMM YYYY\") == DateNow).map(event => React.createElement(EventList, {\n      key: event.id,\n      id: event.id,\n      img: event.img,\n      title: event.title,\n      price: event.price,\n      brief: event.briefDesc,\n      time: event.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    event: state.event\n  };\n};\n\nexport default connect(mapStateToProps)(EventNow);","map":{"version":3,"sources":["C:/Users/haibu/Documents/nodejs/tugas-akhir/src/mapping/eventnow.js"],"names":["React","Component","connect","Grid","EventList","getEvents","moment","dateNow","Date","EventNow","componentDidMount","props","dispatch","render","event","data","isLoading","today","DateNow","format","console","log","marginTop","marginBottom","filter","startTime","map","id","img","title","price","briefDesc","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,MAAMC,OAAO,GAAG,IAAIC,IAAJ,EAAhB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAE/BS,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWC,QAAX,CAAoBP,SAAS,EAA7B;AACD;;AAEDQ,EAAAA,MAAM,GAAG;AAAA,8BACqB,KAAKF,KAAL,CAAWG,KADhC;AAAA,UACCC,IADD,qBACCA,IADD;AAAA,UACOC,SADP,qBACOA,SADP;AAEP,UAAMC,KAAK,GAAG,IAAIT,IAAJ,CAASD,OAAT,CAAd;AACA,UAAMW,OAAO,GAAGZ,MAAM,CAACW,KAAD,CAAN,CAAcE,MAAd,CAAqB,aAArB,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AAGA,WACE,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EAAC,KAFZ;AAGE,MAAA,OAAO,EAAC,cAHV;AAIE,MAAA,UAAU,EAAC,QAJb;AAKE,MAAA,OAAO,EAAE,CALX;AAME,MAAA,KAAK,EAAE;AAAEI,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQGR,IAAI,CACFS,MADF,CACSV,KAAK,IAAKR,MAAM,CAACQ,KAAK,CAACW,SAAP,CAAN,CAAwBN,MAAxB,CAA+B,aAA/B,KAAiDD,OADpE,EAEEQ,GAFF,CAEMZ,KAAK,IACR,oBAAC,SAAD;AACE,MAAA,GAAG,EAAEA,KAAK,CAACa,EADb;AAEE,MAAA,EAAE,EAAEb,KAAK,CAACa,EAFZ;AAGE,MAAA,GAAG,EAAEb,KAAK,CAACc,GAHb;AAIE,MAAA,KAAK,EAAEd,KAAK,CAACe,KAJf;AAKE,MAAA,KAAK,EAAEf,KAAK,CAACgB,KALf;AAME,MAAA,KAAK,EAAEhB,KAAK,CAACiB,SANf;AAOE,MAAA,IAAI,EAAEjB,KAAK,CAACW,SAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CARH,CADF;AAwBD;;AArC8B;;AAwCjC,MAAMO,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLnB,IAAAA,KAAK,EAAEmB,KAAK,CAACnB;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeZ,OAAO,CAAC8B,eAAD,CAAP,CAAyBvB,QAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport EventList from \"../list/eventlist\";\r\nimport { getEvents } from \"../_actions/event\"\r\nimport moment from \"moment\";\r\n\r\nconst dateNow = new Date();\r\n\r\nclass EventNow extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(getEvents())\r\n  }\r\n\r\n  render() {\r\n    const { data, isLoading } = this.props.event;\r\n    const today = new Date(dateNow)\r\n    const DateNow = moment(today).format(\"DD MMM YYYY\")\r\n    console.log(DateNow)\r\n\r\n\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n        style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n      >\r\n        {data\r\n          .filter(event => (moment(event.startTime).format(\"DD MMM YYYY\") == DateNow))\r\n          .map(event => (\r\n            <EventList\r\n              key={event.id}\r\n              id={event.id}\r\n              img={event.img}\r\n              title={event.title}\r\n              price={event.price}\r\n              brief={event.briefDesc}\r\n              time={event.startTime}\r\n            />\r\n          ))}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    event: state.event\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(EventNow);"]},"metadata":{},"sourceType":"module"}