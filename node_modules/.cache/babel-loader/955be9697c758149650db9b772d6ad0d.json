{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haibu\\\\Documents\\\\nodejs\\\\tugas-akhir\\\\src\\\\list\\\\eventlist.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Card } from \"reactstrap\";\nimport { CardMedia, CardContent, IconButton, Snackbar } from \"@material-ui/core\";\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport CloseIcon from '@material-ui/icons/Close';\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"../App.css\";\nimport { addFavorite } from '../_actions/favorite';\nconst userId = localStorage.getItem(\"id\");\nconst isLogin = localStorage.getItem(\"isLogin\");\n\nclass EventList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOpen = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleFavorite = () => {\n      if (isLogin == \"true\") {\n        const favorite = {\n          event_id: this.props.id,\n          following_user: userId\n        };\n        this.props.addFavorite(favorite);\n        this.setState({\n          open: true\n        });\n      } else {\n        alert(\"Anda belum Login\");\n      }\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === 'clickaway') {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const dates = new Date(this.props.time);\n    const date = moment(dates).format(\"DD MMM YYYY\");\n    return React.createElement(Card, {\n      style: {\n        maxWidth: \"350px\",\n        marginBottom: \"40px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(CardMedia, {\n      component: \"img\",\n      alt: \"Contemplative Reptile\",\n      height: \"200\" // width=\"200\"\n      ,\n      image: `${this.props.img}`,\n      title: \"Contemplative Reptile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(CardContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: `/event/?id=${this.props.id}`,\n      style: {\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.title)), React.createElement(IconButton, {\n      \"aria-label\": \"min\",\n      onClick: this.handleFavorite,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(FavoriteBorderIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Rp \", this.props.price), React.createElement(\"h6\", {\n      className: \"card-time\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, date), React.createElement(\"p\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.props.brief)), React.createElement(Snackbar, {\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      open: this.state.open,\n      autoHideDuration: 2000,\n      onClose: this.handleClose,\n      ContentProps: {\n        'aria-describedby': 'message-id'\n      },\n      message: React.createElement(\"span\", {\n        id: \"message-id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"FAVORITE\"),\n      action: [React.createElement(IconButton, {\n        key: \"close\",\n        \"aria-label\": \"close\",\n        color: \"inherit\",\n        onClick: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(CloseIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    favorite: state.favorite\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFavorite: favorite => dispatch(addFavorite(favorite))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EventList);","map":{"version":3,"sources":["C:/Users/haibu/Documents/nodejs/tugas-akhir/src/list/eventlist.js"],"names":["React","Component","Card","CardMedia","CardContent","IconButton","Snackbar","FavoriteBorderIcon","CloseIcon","moment","Link","connect","addFavorite","userId","localStorage","getItem","isLogin","EventList","constructor","props","handleOpen","setState","open","handleFavorite","favorite","event_id","id","following_user","alert","handleClose","event","reason","state","render","dates","Date","time","date","format","maxWidth","marginBottom","img","color","title","price","brief","vertical","horizontal","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Card } from \"reactstrap\";\r\nimport {\r\n  CardMedia,\r\n  CardContent,\r\n  IconButton,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../App.css\";\r\nimport { addFavorite } from '../_actions/favorite'\r\n\r\nconst userId = localStorage.getItem(\"id\")\r\nconst isLogin = localStorage.getItem(\"isLogin\")\r\n\r\nclass EventList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false\r\n    };\r\n  }\r\n\r\n  handleOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n\r\n  handleFavorite = () => {\r\n    if (isLogin == \"true\") {\r\n      const favorite = {\r\n        event_id: this.props.id,\r\n        following_user: userId,\r\n      };\r\n      this.props.addFavorite(favorite);\r\n      this.setState({ open: true });\r\n    } else {\r\n      alert(\"Anda belum Login\")\r\n    }\r\n  }\r\n\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n\r\n\r\n  render() {\r\n    const dates = new Date(this.props.time);\r\n    const date = moment(dates).format(\"DD MMM YYYY\")\r\n    return (\r\n      <Card style={{ maxWidth: \"350px\", marginBottom: \"40px\" }}>\r\n        <CardMedia\r\n          component=\"img\"\r\n          alt=\"Contemplative Reptile\"\r\n          height=\"200\"\r\n          // width=\"200\"\r\n          image={`${this.props.img}`}\r\n          title=\"Contemplative Reptile\"\r\n        />\r\n        <CardContent>\r\n          <div className=\"title\">\r\n            <Link to={`/event/?id=${this.props.id}`} style={{ color: \"black\" }}>\r\n              <h2 className=\"card-title\">{this.props.title}</h2>\r\n            </Link>\r\n            <IconButton aria-label=\"min\" onClick={this.handleFavorite}>\r\n              <FavoriteBorderIcon />\r\n            </IconButton>\r\n          </div>\r\n          <h4>Rp {this.props.price}</h4>\r\n\r\n          <h6 className=\"card-time\">{date}</h6>\r\n\r\n          <p className=\"card-content\">{this.props.brief}</p>\r\n        </CardContent>\r\n\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={2000}\r\n          onClose={this.handleClose}\r\n          ContentProps={{\r\n            'aria-describedby': 'message-id',\r\n\r\n          }}\r\n\r\n          message={<span id=\"message-id\">FAVORITE</span>}\r\n          action={[\r\n\r\n            <IconButton\r\n              key=\"close\"\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              onClick={this.handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>,\r\n          ]}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    favorite: state.favorite\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addFavorite: favorite => dispatch(addFavorite(favorite))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EventList);\r\n"]},"metadata":{},"sourceType":"module"}