{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\haibu\\\\Documents\\\\nodejs\\\\tugas-akhir\\\\src\\\\mapping\\\\myEvent.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"@material-ui/core\";\nimport EventList from \"../list/eventlist\";\nimport { getEvents } from \"../_actions/event\";\nconst user = localStorage.getItem(\"id\");\n\nclass MyEventMap extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      eventList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getEvents());\n  }\n\n  render() {\n    console.log(user);\n    const _this$props$event = this.props.event,\n          data = _this$props$event.data,\n          isLoading = _this$props$event.isLoading;\n    return React.createElement(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"space-between\",\n      alignItems: \"center\",\n      spacing: 2,\n      style: {\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, data.filter(event => event.create_by == user).map(event => React.createElement(EventList, {\n      id: event.id,\n      img: event.img,\n      title: event.title,\n      price: event.price,\n      brief: event.briefDesc,\n      time: event.startTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    event: state.event\n  };\n};\n\nexport default connect(mapStateToProps)(MyEventMap);","map":{"version":3,"sources":["C:/Users/haibu/Documents/nodejs/tugas-akhir/src/mapping/myEvent.js"],"names":["React","Component","connect","Grid","EventList","getEvents","user","localStorage","getItem","MyEventMap","state","eventList","componentDidMount","props","dispatch","render","console","log","event","data","isLoading","marginTop","marginBottom","filter","create_by","map","id","img","title","price","briefDesc","startTime","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AAEA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAb;;AAEA,MAAMC,UAAN,SAAyBR,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BS,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAE;AADP,KADuB;AAAA;;AAK/BC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,QAAX,CAAoBT,SAAS,EAA7B;AACH;;AAEDU,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AADK,8BAEuB,KAAKO,KAAL,CAAWK,KAFlC;AAAA,UAEGC,IAFH,qBAEGA,IAFH;AAAA,UAESC,SAFT,qBAESA,SAFT;AAGL,WACI,oBAAC,IAAD;AACI,MAAA,SAAS,MADb;AAEI,MAAA,SAAS,EAAC,KAFd;AAGI,MAAA,OAAO,EAAC,eAHZ;AAII,MAAA,UAAU,EAAC,QAJf;AAKI,MAAA,OAAO,EAAE,CALb;AAMI,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,MAAb;AAAqBC,QAAAA,YAAY,EAAE;AAAnC,OANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQKH,IAAI,CACAI,MADJ,CACWL,KAAK,IAAKA,KAAK,CAACM,SAAN,IAAmBlB,IADxC,EAEImB,GAFJ,CAEQP,KAAK,IACN,oBAAC,SAAD;AACI,MAAA,EAAE,EAAEA,KAAK,CAACQ,EADd;AAEI,MAAA,GAAG,EAAER,KAAK,CAACS,GAFf;AAGI,MAAA,KAAK,EAAET,KAAK,CAACU,KAHjB;AAII,MAAA,KAAK,EAAEV,KAAK,CAACW,KAJjB;AAKI,MAAA,KAAK,EAAEX,KAAK,CAACY,SALjB;AAMI,MAAA,IAAI,EAAEZ,KAAK,CAACa,SANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHP,CARL,CADJ;AAuBH;;AAnC8B;;AAsCnC,MAAMC,eAAe,GAAGtB,KAAK,IAAI;AAC7B,SAAO;AACHQ,IAAAA,KAAK,EAAER,KAAK,CAACQ;AADV,GAAP;AAGH,CAJD;;AAMA,eAAehB,OAAO,CAAC8B,eAAD,CAAP,CAAyBvB,UAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\"\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nimport EventList from \"../list/eventlist\";\r\nimport { getEvents } from \"../_actions/event\"\r\n\r\nconst user = localStorage.getItem(\"id\")\r\n\r\nclass MyEventMap extends Component {\r\n    state = {\r\n        eventList: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(getEvents())\r\n    }\r\n\r\n    render() {\r\n        console.log(user)\r\n        const { data, isLoading } = this.props.event;\r\n        return (\r\n            <Grid\r\n                container\r\n                direction=\"row\"\r\n                justify=\"space-between\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                style={{ marginTop: \"20px\", marginBottom: \"20px\" }}\r\n            >\r\n                {data\r\n                    .filter(event => (event.create_by == user))\r\n                    .map(event => (\r\n                        <EventList\r\n                            id={event.id}\r\n                            img={event.img}\r\n                            title={event.title}\r\n                            price={event.price}\r\n                            brief={event.briefDesc}\r\n                            time={event.startTime}\r\n                        />\r\n                    ))}\r\n            </Grid>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        event: state.event\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(MyEventMap);\r\n"]},"metadata":{},"sourceType":"module"}